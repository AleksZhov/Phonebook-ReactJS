{"version":3,"file":"static/js/658.79fa189f.chunk.js","mappings":"sPA0EA,EAnEoB,WAClB,IAAQA,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAoCE,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdN,GAAc,SAAAO,GAAS,yBAAUA,GAAV,cAAsBV,EAAOS,GAA7B,GACxB,EAoBD,OACE,kBAAME,UAAU,gBAAgBC,SAZb,SAAAC,GACnBA,EAAEC,iBACEjB,EAAKkB,MAAK,SAAAC,GAAO,OAAIA,EAAQhB,OAASE,EAAWF,IAAhC,IACnBiB,MAAM,GAAD,OAAIf,EAAWF,KAAf,iCAGPK,EAAWH,GAZXC,EAAc,CACZH,KAAM,GACNC,OAAQ,KAaX,EAGC,kBAEE,kBAAOU,UAAU,4BAAjB,UACE,kBACEA,UAAU,uBACVO,KAAK,OACLlB,KAAK,OACLS,MAAOP,EAAWF,KAClBmB,SAAUb,EACVc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,mBAAOX,UAAU,4BAAjB,oBAEE,kBACEA,UAAU,uBACVO,KAAK,MACLlB,KAAK,SACLS,MAAOP,EAAWD,OAClBkB,SAAUb,EACVc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQX,UAAU,kBAAkBO,KAAK,SAAzC,2BAKL,ECvED,EAAkC,gCAAlC,EAAgF,4B,oBCsBhF,EAlBe,WACb,IAAMK,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYd,KAAtB,IAC/BiB,GAAWC,EAAAA,EAAAA,MACjB,OACE,iBAAKhB,UAAWiB,EAAhB,WACE,kDACA,kBACEjB,UAAWiB,EACX5B,KAAK,SACLS,MAAOc,EACPJ,SAAU,SAAAN,GACRa,GAASG,EAAAA,EAAAA,IAAkBhB,EAAEL,cAAcC,OAC5C,MAIR,E,6BCnBYqB,EAAUC,EAAAA,EAAAA,QAAH,wIASPC,EAAKD,EAAAA,EAAAA,GAAH,mECyCf,MA3CA,WACE,IAAQlC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAwCoC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,WAElBZ,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYd,KAAtB,IAUrC,OACE,+BACE,UAACqB,EAAD,CAASnB,UAAU,WAAnB,WACE,SAACqB,EAAD,CAAIrB,UAAU,kBAAd,uBACA,eAAIA,UAAU,WAAd,SACGd,GAbmB,WAC1B,GAAKA,EAIL,OAH8B,OAAIA,GAAMuC,QAAO,SAAApB,GAAO,OACpDA,EAAQhB,KAAKqC,cAAcC,SAASf,EAAYc,cADI,GAIvD,CAQSE,GAAsBC,KAAI,YAA2B,IAAxBxC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQwC,EAAS,EAATA,GACzC,OACE,gBAAa9B,UAAU,iBAAvB,WACE,mCACKX,EADL,MACcC,MAEd,mBACEiB,KAAK,SACLP,UAAU,oBACV+B,QAAS,kBAAMR,EAAcO,EAApB,EACTE,SAAUR,EAJZ,sBAJOM,EAcZ,UAKZ,EClCD,EAZiB,WACf,OACE,iCACE,6CACA,SAAC,EAAD,KAEA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport './ContactForm.css';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'services/contactsApi';\n\nconst ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [formFields, setFormFields] = useState({\n    name: '',\n    number: '',\n  });\n\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setFormFields(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const reset = () => {\n    setFormFields({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (data.some(contact => contact.name === formFields.name)) {\n      alert(`${formFields.name} is already in contact list`);\n      return;\n    }\n    addContact(formFields);\n\n    reset();\n  };\n\n  return (\n    <form className=\"contacts-form\" onSubmit={handleSubmit}>\n      Name\n      <label className=\"contacts-form__name-label\">\n        <input\n          className=\"contacts-form__input\"\n          type=\"text\"\n          name=\"name\"\n          value={formFields.name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"contacts-form__name-label\">\n        Number\n        <input\n          className=\"contacts-form__input\"\n          type=\"tel\"\n          name=\"number\"\n          value={formFields.number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className=\"new-contact-btn\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport s from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { changeFilterValue } from '../../redux/contactsSlice';\n\nconst Filter = () => {\n  const filterValue = useSelector(state => state.filterValue.value);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterContainer}>\n      <p>Find contacts by name</p>\n      <input\n        className={s.filterInput}\n        name=\"filter\"\n        value={filterValue}\n        onChange={e => {\n          dispatch(changeFilterValue(e.currentTarget.value));\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  list-style-type: square;\n\n  margin-left: auto;\n  margin-right: 0px;\n  max-width: 400px;\n  width: 400px;\n`;\n\nexport const H2 = styled.h2`\n  text-align: center;\n  font-size: 40px;\n`;\n","import * as React from 'react';\nimport './ContactList.css';\nimport { useSelector } from 'react-redux/es/exports';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'services/contactsApi';\nimport { Section, H2 } from './ContactList.styled';\n\nfunction ContactList() {\n  const { data } = useGetContactsQuery();\n  const [deleteContact, { isFetching }] = useDeleteContactMutation();\n\n  const filterValue = useSelector(state => state.filterValue.value);\n\n  const getFilteredContacts = () => {\n    if (!data) return;\n    const filteredContactsArray = [...data].filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filteredContactsArray;\n  };\n\n  return (\n    <>\n      <Section className=\"contacts\">\n        <H2 className=\"contacts__title\">Contacts</H2>\n        <ul className=\"contacts\">\n          {data &&\n            getFilteredContacts().map(({ name, number, id }) => {\n              return (\n                <li key={id} className=\"contacts__item\">\n                  <p>\n                    • {name} : {number}\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"contacts__del-btn\"\n                    onClick={() => deleteContact(id)}\n                    disabled={isFetching}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      </Section>\n    </>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1>Add new contact</h1>\n      <ContactForm />\n\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["data","useGetContactsQuery","useState","name","number","formFields","setFormFields","useAddContactMutation","addContact","handleChange","event","currentTarget","value","prevState","className","onSubmit","e","preventDefault","some","contact","alert","type","onChange","pattern","title","required","filterValue","useSelector","state","dispatch","useDispatch","s","changeFilterValue","Section","styled","H2","useDeleteContactMutation","deleteContact","isFetching","filter","toLowerCase","includes","getFilteredContacts","map","id","onClick","disabled"],"sourceRoot":""}